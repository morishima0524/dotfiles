set nocompatible

filetype off

set rtp+=~/.vim/bundle/Vundle.vim " vundleのインストール先
call vundle#begin()
Plugin 'VundleVim/Vundle.vim'

" Directory Tree View
" usage enter :NERDTree in ex mode
Plugin 'scrooloose/nerdtree'

" Indent Seeing
Plugin 'nathanaelkane/vim-indent-guides'

" Xml
Plugin 'vim-scripts/xmledit'

" Velocity
Plugin 'lepture/vim-velocity'

Plugin 'vim-scripts/TortoiseSVN.vim'

" propertiesファイル読み込み
Plugin 'kamichidu/vim-edit-properties'

call vundle#end()
filetype plugin indent on

:let g:tortoiseSvnCmd='c:\Program Files\TortoiseSVN\bin\TortoiseProc.exe'
:let g:NERDTreeDirArrows=1
:let g:NERDTreeDirArrowExpandable='>'
:let g:NERDTreeDirArrowCollapsible='v'

" edit settings
"" tab width on screen
set tabstop=4
"" tab width auto indent
set shiftwidth=4
"" tab to space
set expandtab
"" Use tab on XML editing
augroup fileTypeIndent
    autocmd!
    autocmd BufNewFile,BufRead *.xml setlocal noet "noexpandtab
augroup END
"" Disable auto formatting on long line
set textwidth=0
"" Show line number
set number
"" Share OS clipboard
set clipboard=unnamed
"" Wrap too long line
set wrap
"" Disable auto insert comment characters
"set fo-=ro " not working

" indent guide options
colorscheme default
let g:indent_guides_enable_on_vim_startup=1
let g:indent_guides_start_level=2
let g:indent_guides_guide_size=1

" Velocity
aug filetypeplugin
    au! BufRead,BufNewFile *.vm
    au BufRead,BufNewFile *.vm set ft=html syntax=velocity
aug end


" Mapping
inoremap jj <ESC>
"" Add blank line
nnoremap <silent><S-CR> o<ESC>
"" Toggle directory window
nnoremap <silent><C-t> :NERDTreeToggle<CR>
"" Move down(visual line)
nnoremap <silent>j gj
"" Move up(visual line)
nnoremap <silent>k gk
"" Open _vimrc
nmap <F2> :tabnew $MYVIMRC<CR>
"" grep next
map gn :cn<CR>

" disable undo file
set undodir=
set undofile
" disable backup
"set nobackup

" ウインドウの幅
set columns=150
" ウインドウの高さ
set lines=55

" Auto reload .vimrc when save
augroup source-vimrc
  autocmd!
  autocmd BufWritePost *vimrc source $MYVIMRC | set foldmethod=marker
  "autocmd BufWritePost *gvimrc if has('gui_running') source $MYGVIMRC
augroup END
